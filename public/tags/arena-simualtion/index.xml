<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Arena Simualtion on Pedro N. de Lima</title>
    <link>/tags/arena-simualtion/</link>
    <description>Recent content in Arena Simualtion on Pedro N. de Lima</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Mon, 01 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/arena-simualtion/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Making Sense of Simulation Models with Metamodels Part 2 - Splines with Arena and R</title>
      <link>/post/making-sense-of-simulation-models-with-metamodels-part-2-splines-with-arena-and-r/</link>
      <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/making-sense-of-simulation-models-with-metamodels-part-2-splines-with-arena-and-r/</guid>
      <description>In my last post, I used low-order polynomial regression to make sense of non-linear simulation model results. In this post, I’ll demonstrate how you can use splines to summarise results from an Arena simulation model.
Why Splines?In the previous post, I briefly described the motivation for using metamodels to approximate simulation models results. Splines are among the useful techinques for metamodeling because: (i) they are relatively simple (they are piecewise-defined polynomials); (ii) Unlike low-order polynomials, you can generally use them with a global sampling strategy (Barton and Meckesheimer 2006).</description>
    </item>
    
    <item>
      <title>Making Sense of Simulation Models with Metamodels Part 1 - Low-Order Polynomials with Arena and R</title>
      <link>/post/making-sense-of-models-with-metamodels-low-order-polynomialss-with-arena-and-r/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/making-sense-of-models-with-metamodels-low-order-polynomialss-with-arena-and-r/</guid>
      <description>This is part 1 of a series of posts in which I will explore the utility of using metamodels to make sense of (and possibly optimizing) simulation models.
If you used simulation modeling on a real project, you might be familiar with this fictional story:
You spent long hours building and refining your simulation model (eg.: a Discrete Event Model). Hopefully, you are confident that it can yield reliable results.</description>
    </item>
    
    <item>
      <title>Arena2R - An R Package for Arena Simulation Users</title>
      <link>/post/arena2r-package-tutorial/</link>
      <pubDate>Thu, 27 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/arena2r-package-tutorial/</guid>
      <description>Arena Simulation is a well-known Discrete Event Simulation Software. However, if you are a power user you might want to extend your analysis beyond what Arena’s Process Analyzer offers. In this tutorial, I’ll guide you through the main functions of Arena2R package.
If you’re not an R user, fear not! Arena2R comes with an app you can use to explore your Arena Simulation data. All you’ll have to do is to Install R and R Studio, and run two commands in your R console.</description>
    </item>
    
  </channel>
</rss>