<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Pedro N. de Lima</title>
    <link>/tags/r/</link>
    <description>Recent content in R on Pedro N. de Lima</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Mon, 22 Apr 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Factory Physics Flow Benchmarking in R</title>
      <link>/post/factory-physics-flow-benchmarking-in-r/</link>
      <pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/factory-physics-flow-benchmarking-in-r/</guid>
      <description>Factory Physics (FP) Flow Benchmarking is a technique useful to perform absolute benchmark of a systemâ€™s throughput and cycle time, given the Work in Process (wip) the system is allowed to have. These techniques are introduced in (Pound, Bell, and Spearman 2014) and (Hopp and Spearman 2008), and repeating this discussion is beyond the scope of this post.
As a simulation pratictioneer and lecturer, as I read these books, I naturally started creating models and spreadsheet formulas to verify if the theory holds (and, of course, it does).</description>
    </item>
    
    <item>
      <title>Discrete Event Simulation (DES) Metamodeling - Splines with R and Arena</title>
      <link>/post/des-metamodeling-splines-r-arena/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/des-metamodeling-splines-r-arena/</guid>
      <description>Simulation Metamodeling - building and using surrogate models that can approximate results from more complicated simulation models - is an interesting approach to analyze results from complicated, computationally expensive simulation models. Metamodels are useful because they can yield good approximations of the original simulation model response variables using less computational resources. For an introduction to Metamodeling, refer to (Barton 2015).
To my knowledge, no Discrete-Event Simulation (DES) software provides metamodeling capabilities, and guidance on how to actually execute metamodeling is scarce.</description>
    </item>
    
    <item>
      <title>Making Sense of Simulation Models with Metamodels Part 1 - Low-Order Polynomials with Arena and R</title>
      <link>/post/making-sense-of-models-with-metamodels-low-order-polynomialss-with-arena-and-r/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/making-sense-of-models-with-metamodels-low-order-polynomialss-with-arena-and-r/</guid>
      <description>This is part 1 of a series of posts in which I will explore the utility of using metamodels to make sense of (and possibly optimizing) simulation models.
If you used simulation modeling on a real project, you might be familiar with this fictional story:
You spent long hours building and refining your simulation model (eg.: a Discrete Event Model). Hopefully, you are confident that it can yield reliable results.</description>
    </item>
    
  </channel>
</rss>